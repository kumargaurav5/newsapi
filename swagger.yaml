openapi: 3.0.0
info:
  title: NEWS API
  description: Node.js API Documentation for NEWS API
  version: "1.0.0"
servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      description: Registers a new user with email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: P@ssw0rd
      responses:
        201:
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: john.doe@example.com
        409:
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User already exists
        422:
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/auth/login:
    post:
      summary: User login
      description: Logs in a user and returns an access token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: P@ssw0rd
      responses:
        200:
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  message:
                    type: string
                    example: Logged in
        400:
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        422:
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/send-email:
    get:
      summary: Send a test email
      description: Sends a test email to a specified address.
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            format: email
          description: Email address to send the test email.
      responses:
        200:
          description: Email successfully added to the queue
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Job added successfully
        422:
          description: Validation error for email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/profile:
    get:
      summary: Get user profile
      description: Retrieves the profile of the currently authenticated user.
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successfully retrieved user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: john.doe@example.com
                      profile:
                        type: string
                        example: profile_image.png
        401:
          description: Unauthorized, token is missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/profile/{id}:
    post:
      summary: Update user profile image
      description: Updates the profile image for a user. Requires file upload.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the user to update.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile:
                  type: string
                  format: binary
                  description: Profile image to upload
      responses:
        200:
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Profile updated successfully
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: John Doe
                      profile:
                        type: string
                        example: updated_image.png
        400:
          description: Bad request, either profile image is missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/news:
    get:
      summary: Get list of news
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 15
          description: Number of news items per page
      responses:
        '200':
          description: List of news articles
          content:
            application/json:
              schema:
                type: object
                properties:
                  news:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        content:
                          type: string
                        image:
                          type: string
                        user:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            profile:
                              type: string
                  metadata:
                    type: object
                    properties:
                      totalNews:
                        type: integer
                      totalPages:
                        type: integer
                      currentLimit:
                        type: integer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    post:
      summary: Create a new news article
      security:
          - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: News article created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  news:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      content:
                        type: string
                      image:
                        type: string
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          profile:
                            type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/news/{id}:
    get:
      summary: Get a specific news article by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the news article
      responses:
        '200':
          description: News article details
          content:
            application/json:
              schema:
                type: object
                properties:
                  news:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      content:
                        type: string
                      image:
                        type: string
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          profile:
                            type: string
        '404':
          description: News article not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    put:
      summary: Update a news article
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the news article
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: News article updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  updatednews:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      content:
                        type: string
                      image:
                        type: string
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          profile:
                            type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    delete:
      summary: Delete a news article
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the news article
      responses:
        '200':
          description: News article deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  deletednews:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      content:
                        type: string
                      image:
                        type: string
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          profile:
                            type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: News article not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
